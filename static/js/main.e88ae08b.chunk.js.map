{"version":3,"sources":["modules/City.js","modules/Weather.js","App.js","index.js"],"names":["Logo","styled","img","Lable","span","Search","form","City","props","updateCity","fetchWeather","src","onSubmit","onChange","e","target","value","placeholder","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","Condition","div","Temp","Location","Info","Infocontainer","Infocard","Infoicon","Infolabel","Infocomponent","name","Weather","timeStamp","weather","isDay","icon","includes","Math","floor","main","temp","description","WeatherIcons","sys","country","Date","getHours","getMinutes","speed","Container","AppLabel","App","useState","city","updateWeather","a","preventDefault","Axios","get","response","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e88ae08b.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\nimport React from \"react\";\r\n\r\nconst Logo = styled.img`\r\nwidth: 140px;\r\nheight: 140px;\r\n`;\r\n\r\nconst Lable = styled.span`\r\ncolor:black;\r\nfont-size:18px;\r\nfont-weight:bold;\r\nmargin:18px auto;\r\n`;\r\n\r\nconst Search = styled.form`\r\ndisplay:flex;\r\nflex-direction:row;\r\nborder:black solid 1px;\r\nborder-radius:2px;\r\ncolor:black;\r\nmargin:20px auto;\r\n& input {\r\n    padding:10px;\r\n    font-size:14px;\r\n    border:none;\r\n    outline:none;\r\n    font-weight:bold;\r\n}\r\n& button {\r\n    padding:10px;\r\n    font-size:14px;\r\n    color:white;\r\n    background-color:black;\r\n    border:none;\r\n    outline:none;\r\n    font-weight:bold;\r\n    cursor:pointer;\r\n}\r\n`;\r\n\r\nconst City = (props) => {\r\n    const { updateCity, fetchWeather } = props;\r\n    return (\r\n        <>\r\n        <Logo src={\"/icon/perfect-day.svg\"} />\r\n        <Lable>Find weather of your city</Lable>\r\n        <Search onSubmit={fetchWeather}>\r\n            <input onChange={(e) => updateCity(e.target.value)} placeholder=\"City\"/>\r\n            <button type={\"submit\"}>Search</button>\r\n        </Search>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default City;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport {WeatherIcons} from \"../App\";\r\n\r\nexport const WeatherInfoIcons = {\r\n    sunset: \"/icon/temp.svg\",\r\n    sunrise: \"/icon/temp.svg\",\r\n    humidity: \"/icon/humidity.svg\",\r\n    wind: \"/icon/wind.svg\",\r\n    pressure: \"/icon/pressure.svg\",\r\n};\r\n\r\nconst Condition = styled.div`\r\ndisplay:flex;\r\nflex-direction:row;\r\nalign-items:center;\r\nwidth:100%;\r\njustify-content:space-between;\r\nmargin:30px auto;\r\n`;\r\n\r\nconst Temp = styled.span`\r\nmargin:20px auto;\r\nfont-size:14px;\r\n& span{\r\n    font-size:28px;\r\n}\r\n`;\r\n\r\nconst Logo = styled.img`\r\nwidth: 100px;\r\nheight: 100px;\r\nmargin:5px auto;\r\n`;\r\n\r\nconst Location = styled.span`\r\nfont-size:28px;\r\nfont-weight:bold;\r\n`;\r\n\r\nconst Info = styled.span`\r\nfont-size:14px;\r\nfont-weight:bold;\r\nmargin:20px 25px auto;\r\ntext-align:start;\r\nwidth:90%;\r\n`;\r\n\r\nconst Infocontainer = styled.div`\r\ndisplay:flex;\r\nwidth:90%;\r\nflex-direction:row;\r\njustify-content:space-evenly;\r\nalign-items:center;\r\nflex-wrap:wrap;\r\n`;\r\n\r\nconst Infocard = styled.div`\r\n  display: flex;\r\n  margin: 5px 10px;\r\n  flex-direction: row;\r\n  justify-content: space-evenly;\r\n  align-items: center;\r\n`;\r\nconst Infoicon = styled.img`\r\n  width: 36px;\r\n  height: 36px;\r\n`;\r\nconst Infolabel = styled.span`\r\n  display: flex;\r\n  flex-direction: column;\r\n  font-size: 14px;\r\n  margin: 15px;\r\n  & span {\r\n    font-size: 12px;\r\n    text-transform: capitalize;\r\n  }\r\n`;\r\n\r\nconst Infocomponent = (props) =>{\r\n    const {name, value} = props;\r\n    return(\r\n        <Infocard>\r\n            <Infoicon src={WeatherInfoIcons[name]} />\r\n            <Infolabel>\r\n                {value}\r\n                <span>{name}</span>\r\n            </Infolabel>\r\n        </Infocard>\r\n    );\r\n};\r\n\r\nconst Weather = (props) => {\r\n    const {weather} = props;\r\n    const isDay = weather?.weather[0].icon?.includes('d')\r\n    const getTime = (timeStamp) => {\r\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\r\n    }\r\n    return (\r\n        <>\r\n        <Condition>\r\n            <Temp>\r\n                <span>{`${Math.floor(weather?.main?.temp - 273)}Â°C`}</span>\r\n                {`  |  ${weather?.weather[0].description}`}\r\n            </Temp>\r\n            <Logo src={WeatherIcons[weather?.weather[0].icon]}/>\r\n        </Condition>\r\n        <Location>{`${weather?.name}, ${weather?.sys?.country}`}</Location>\r\n        <Info>Weather Info</Info>\r\n        <Infocontainer>\r\n            <Infocomponent name={isDay ? \"sunset\" : \"sunrise\"} value={`${getTime(weather?.sys[isDay ? \"sunset\" : \"sunrise\"])}`}/>\r\n            <Infocomponent name={\"humidity\"} value={weather?.main?.humidity}/>\r\n            <Infocomponent name={\"wind\"} value={weather?.wind?.speed}/>\r\n            <Infocomponent name={\"pressure\"} value={weather?.main?.pressure}/>\r\n        </Infocontainer>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Weather;","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport City from \"./modules/City\";\nimport Weather from \"./modules/Weather\";\n\nconst Key = \"9cb3e7f53343d83260ac363d26973c4f\";\n\nexport const WeatherIcons = {\n  \"01d\": \"/icon/sunny.svg\",\n  \"01n\": \"/icon/night.svg\",\n  \"02d\": \"/icon/day.svg\",\n  \"02n\": \"/icon/cloudy-night.svg\",\n  \"03d\": \"/icon/cloudy.svg\",\n  \"03n\": \"/icon/cloudy.svg\",\n  \"04d\": \"/icon/perfect-day.svg\",\n  \"04n\": \"/icon/cloudy-night.svg\",\n  \"09d\": \"/icon/rain.svg\",\n  \"09n\": \"/icon/rain-night.svg\",\n  \"10d\": \"/icon/rain.svg\",\n  \"10n\": \"/icon/rain-night.svg\",\n  \"11d\": \"/icon/storm.svg\",\n  \"11n\": \"/icon/storm.svg\",\n};\n\nconst Container= styled.div`\n display: flex;\n flex-direction: column;\n margin: auto;\n align-items: center;\n padding: 20px 10px;\n width: 380px;\n background: white;\n box-shadow: 0 3px 6px 0 #555;\n font-family: Montserrat;\n`;\n\n\nconst AppLabel = styled.span`\n  color:black;\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nfunction App() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${Key}`,\n    );\n    updateWeather(response.data);\n  };\n  return <Container>\n    <AppLabel>React weather App</AppLabel>\n    {city && weather ? (\n        <Weather weather={weather} city={city} />\n      ) : (\n        <City updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>;\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}